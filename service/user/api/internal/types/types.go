// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0

package types

type Relations struct {
	RelationsId      int64 `json:"relations_id"`      // 关系记录唯一ID
	UserId           int64 `json:"user_id"`           // 发起关系的用户ID
	OtherId          int64 `json:"other_id"`          // 关系目标用户ID
	RelationshipType int64 `json:"relationship_type"` // 关系类型：1-好友 2-关注 3-拉黑 4-屏蔽
}

type UserBase struct {
	UserId    int64  `json:"user_id"`    // 用户唯一标识ID
	NickName  string `json:"nick_name"`  // 用户昵称，用于显示
	Avatar    string `json:"avatar"`     // 用户头像URL地址
	Gender    string `json:"gender"`     // 用户性别：male/female/unknown
	BirthDate int64  `json:"birth_date"` // 出生日期时间戳（毫秒）
}

type UserDeleteReq struct {
	Phone    string `json:"phone"`    // 根据手机号删除用户
	UserId   int64  `json:"user_id"`  // 要删除的用户ID
	Password string `json:"password"` // 用户密码，用于身份验证
}

type UserDeleteResp struct {
}

type UserInfo struct {
	UserBase    UserBase    `json:"user_base"`    // 用户基本信息
	UserPrivate UserPrivate `json:"user_private"` // 用户私密信息
}

type UserLoginReq struct {
	Phone    string `json:"phone"`    // 手机号登录（推荐方式）
	UserId   int64  `json:"user_id"`  // 用户ID登录（备选方式）
	Password string `json:"password"` // 用户密码，明文传输（建议HTTPS）
}

type UserLoginResp struct {
	Token string `json:"token"` // JWT访问令牌，有效期见配置
}

type UserPrivate struct {
	UserId   int64  `json:"user_id"`  // 用户唯一标识ID
	Phone    string `json:"phone"`    // 用户手机号，用于登录和验证
	Email    string `json:"email"`    // 用户邮箱地址
	Password string `json:"password"` // 用户密码（加密后存储）
	Role     string `json:"role"`     // 用户角色：admin/user/vip等
	Status   int64  `json:"status"`   // 用户状态：0-正常 1-禁用 2-删除
}

type UserQueryReq struct {
	QueryUserId int64  `json:"query_user_id"` // 要查询的用户ID
	Type        string `json:"type"`          // 查询类型："basic"-基本信息 "private"-私密信息
}

type UserQueryResp struct {
	User UserInfo `json:"user_info"` // 用户信息，内容根据type参数决定
}

type UserRegisterReq struct {
	Phone    string `json:"phone"`    // 手机号，必须唯一，用作登录凭证
	Password string `json:"password"` // 用户密码，建议8位以上包含字母数字
	Role     string `json:"role"`     // 用户角色，默认为"user"
}

type UserRegisterResp struct {
	UserId int64  `json:"user_id"` // 新创建的用户ID
	Token  string `json:"token"`   // JWT访问令牌，注册即登录
}

type UserUpdateReq struct {
	UserInfo   UserInfo `json:"user_info"`   // 包含更新字段的用户基本信息
	UpdateType string   `json:"update_type"` // 修改的类型，基础信息，私有信息
}

type UserUpdateResp struct {
}
