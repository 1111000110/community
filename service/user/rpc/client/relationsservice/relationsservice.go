// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: user.proto

package relationsservice

import (
	"context"

	"community.com/service/user/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Relations               = __.Relations
	User                    = __.User
	UserDeleteReq           = __.UserDeleteReq
	UserDeleteResp          = __.UserDeleteResp
	UserLoginReq            = __.UserLoginReq
	UserLoginResp           = __.UserLoginResp
	UserQueryReq            = __.UserQueryReq
	UserQueryResp           = __.UserQueryResp
	UserRegisterReq         = __.UserRegisterReq
	UserRegisterResp        = __.UserRegisterResp
	UserRelationsGetReq     = __.UserRelationsGetReq
	UserRelationsGetResp    = __.UserRelationsGetResp
	UserRelationsUpdateReq  = __.UserRelationsUpdateReq
	UserRelationsUpdateResp = __.UserRelationsUpdateResp
	UserUpdateReq           = __.UserUpdateReq
	UserUpdateResp          = __.UserUpdateResp

	RelationsService interface {
		// UserRelationsUpdate 用户关系更新
		UserRelationsUpdate(ctx context.Context, in *UserRelationsUpdateReq, opts ...grpc.CallOption) (*UserRelationsUpdateResp, error)
		// UserRelationsGet 用户关系查询
		UserRelationsGet(ctx context.Context, in *UserRelationsGetReq, opts ...grpc.CallOption) (*UserRelationsGetResp, error)
	}

	defaultRelationsService struct {
		cli zrpc.Client
	}
)

func NewRelationsService(cli zrpc.Client) RelationsService {
	return &defaultRelationsService{
		cli: cli,
	}
}

// UserRelationsUpdate 用户关系更新
func (m *defaultRelationsService) UserRelationsUpdate(ctx context.Context, in *UserRelationsUpdateReq, opts ...grpc.CallOption) (*UserRelationsUpdateResp, error) {
	client := __.NewRelationsServiceClient(m.cli.Conn())
	return client.UserRelationsUpdate(ctx, in, opts...)
}

// UserRelationsGet 用户关系查询
func (m *defaultRelationsService) UserRelationsGet(ctx context.Context, in *UserRelationsGetReq, opts ...grpc.CallOption) (*UserRelationsGetResp, error) {
	client := __.NewRelationsServiceClient(m.cli.Conn())
	return client.UserRelationsGet(ctx, in, opts...)
}
