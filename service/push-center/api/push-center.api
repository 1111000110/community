syntax = "v1"

info (
	title:   "推送中心"
	desc:    "推送中心服务"
	author:  "张璇"
	email:   "xatuzx2025@163.com"
	version: "1.0"
)

// WebSocket 连接相关类型
type (
	WSConnectReq {
		UserId   int64  `json:"userId"`
		Token    string `json:"token"`
		Platform string `json:"platform"`
	}

	WSConnectResp {
		ConnId string `json:"connId"`
		Status string `json:"status"`
	}
)

// 推送消息相关类型
type (
	PushMessageReq {
		UserIds    []int64            `json:"userIds"`
		SessionIds []int64            `json:"sessionIds"`
		Message    PushMessageContent `json:"message"`
		PushType   string             `json:"pushType"`
	}

	PushMessageContent {
		Id          string            `json:"id"`
		Type        string            `json:"type"`
		FromUserId  int64             `json:"fromUserId"`
		ToUserId    int64             `json:"toUserId"`
		SessionId   int64             `json:"sessionId"`
		Content     string            `json:"content"`
		ContentType string            `json:"contentType"`
		Extra       map[string]string `json:"extra"`
		Timestamp   int64             `json:"timestamp"`
	}

	PushMessageResp {
		MessageId string `json:"messageId"`
		Status    string `json:"status"`
	}
)

// 会话管理相关类型
type (
	JoinSessionReq {
		UserId    int64  `json:"userId"`
		SessionId int64  `json:"sessionId"`
	}

	LeaveSessionReq {
		UserId    int64  `json:"userId"`
		SessionId int64  `json:"sessionId"`
	}

	SessionResp {
		Success bool   `json:"success"`
		Message string `json:"message"`
	}
)

// 统计信息相关类型
type (
	StatsReq {}

	StatsResp {
		TotalConnections int64 `json:"totalConnections"`
		TotalUsers       int64 `json:"totalUsers"`
		TotalSessions    int64 `json:"totalSessions"`
		OnlineUsers      int64 `json:"onlineUsers"`
	}
)

// WebSocket 连接管理接口
@server (
	group:      ws
	timeout:    30s
	maxBytes:   1048576
	middleware: Middleware
)
service push-center {
	@handler wsConnect
	get /ws/connect (WSConnectReq) returns (WSConnectResp)
}

// 推送管理接口
@server (
	group:      push
	timeout:    10s
	maxBytes:   1048576
	middleware: Middleware
	jwt:        Auth
)
service push-center {
	@handler pushMessage
	post /push/message (PushMessageReq) returns (PushMessageResp)

	@handler joinSession
	post /push/join-session (JoinSessionReq) returns (SessionResp)

	@handler leaveSession
	post /push/leave-session (LeaveSessionReq) returns (SessionResp)
}

// 管理接口
@server (
	group:      admin
	timeout:    10s
	maxBytes:   1048576
	middleware: Middleware
	jwt:        Auth
)
service push-center {
	@handler getStats
	post /admin/stats (StatsReq) returns (StatsResp)
}