// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: message.proto

package server

import (
	"context"

	"community.com/service/message/rpc/internal/logic"
	"community.com/service/message/rpc/internal/svc"
	"community.com/service/message/rpc/pb"
)

type MessageServer struct {
	svcCtx *svc.ServiceContext
	__.UnimplementedMessageServer
}

func NewMessageServer(svcCtx *svc.ServiceContext) *MessageServer {
	return &MessageServer{
		svcCtx: svcCtx,
	}
}

func (s *MessageServer) GetMessageByIds(ctx context.Context, in *__.GetMessageByIdsReq) (*__.GetMessageByIdsResp, error) {
	l := logic.NewGetMessageByIdsLogic(ctx, s.svcCtx)
	return l.GetMessageByIds(in)
}

func (s *MessageServer) GetMessageList(ctx context.Context, in *__.GetMessageListReq) (*__.GetMessageListResp, error) {
	l := logic.NewGetMessageListLogic(ctx, s.svcCtx)
	return l.GetMessageList(in)
}

func (s *MessageServer) CreateMessage(ctx context.Context, in *__.CreateMessageReq) (*__.CreateMessageResp, error) {
	l := logic.NewCreateMessageLogic(ctx, s.svcCtx)
	return l.CreateMessage(in)
}

func (s *MessageServer) UpdateMessageById(ctx context.Context, in *__.UpdateMessageByIdReq) (*__.UpdateMessageByIdResp, error) {
	l := logic.NewUpdateMessageByIdLogic(ctx, s.svcCtx)
	return l.UpdateMessageById(in)
}

func (s *MessageServer) DeleteMessage(ctx context.Context, in *__.DeleteMessageReq) (*__.DeleteMessageResp, error) {
	l := logic.NewDeleteMessageLogic(ctx, s.svcCtx)
	return l.DeleteMessage(in)
}
