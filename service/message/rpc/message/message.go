// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: message.proto

package message

import (
	"context"

	"community.com/service/message/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateMessageReq      = __.CreateMessageReq
	CreateMessageResp     = __.CreateMessageResp
	DeleteMessageReq      = __.DeleteMessageReq
	DeleteMessageResp     = __.DeleteMessageResp
	GetMessageByIdsReq    = __.GetMessageByIdsReq
	GetMessageByIdsResp   = __.GetMessageByIdsResp
	GetMessageListReq     = __.GetMessageListReq
	GetMessageListResp    = __.GetMessageListResp
	MessageContent        = __.MessageContent
	MessageDetail         = __.MessageDetail
	UpdateMessageByIdReq  = __.UpdateMessageByIdReq
	UpdateMessageByIdResp = __.UpdateMessageByIdResp

	Message interface {
		GetMessageByIds(ctx context.Context, in *GetMessageByIdsReq, opts ...grpc.CallOption) (*GetMessageByIdsResp, error)
		GetMessageList(ctx context.Context, in *GetMessageListReq, opts ...grpc.CallOption) (*GetMessageListResp, error)
		CreateMessage(ctx context.Context, in *CreateMessageReq, opts ...grpc.CallOption) (*CreateMessageResp, error)
		UpdateMessageById(ctx context.Context, in *UpdateMessageByIdReq, opts ...grpc.CallOption) (*UpdateMessageByIdResp, error)
		DeleteMessage(ctx context.Context, in *DeleteMessageReq, opts ...grpc.CallOption) (*DeleteMessageResp, error)
	}

	defaultMessage struct {
		cli zrpc.Client
	}
)

func NewMessage(cli zrpc.Client) Message {
	return &defaultMessage{
		cli: cli,
	}
}

func (m *defaultMessage) GetMessageByIds(ctx context.Context, in *GetMessageByIdsReq, opts ...grpc.CallOption) (*GetMessageByIdsResp, error) {
	client := __.NewMessageClient(m.cli.Conn())
	return client.GetMessageByIds(ctx, in, opts...)
}

func (m *defaultMessage) GetMessageList(ctx context.Context, in *GetMessageListReq, opts ...grpc.CallOption) (*GetMessageListResp, error) {
	client := __.NewMessageClient(m.cli.Conn())
	return client.GetMessageList(ctx, in, opts...)
}

func (m *defaultMessage) CreateMessage(ctx context.Context, in *CreateMessageReq, opts ...grpc.CallOption) (*CreateMessageResp, error) {
	client := __.NewMessageClient(m.cli.Conn())
	return client.CreateMessage(ctx, in, opts...)
}

func (m *defaultMessage) UpdateMessageById(ctx context.Context, in *UpdateMessageByIdReq, opts ...grpc.CallOption) (*UpdateMessageByIdResp, error) {
	client := __.NewMessageClient(m.cli.Conn())
	return client.UpdateMessageById(ctx, in, opts...)
}

func (m *defaultMessage) DeleteMessage(ctx context.Context, in *DeleteMessageReq, opts ...grpc.CallOption) (*DeleteMessageResp, error) {
	client := __.NewMessageClient(m.cli.Conn())
	return client.DeleteMessage(ctx, in, opts...)
}
