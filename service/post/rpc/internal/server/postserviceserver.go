// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: post.proto

package server

import (
	"context"

	"community.com/service/post/rpc/internal/logic"
	"community.com/service/post/rpc/internal/svc"
	"community.com/service/post/rpc/pb"
)

type PostServiceServer struct {
	svcCtx *svc.ServiceContext
	__.UnimplementedPostServiceServer
}

func NewPostServiceServer(svcCtx *svc.ServiceContext) *PostServiceServer {
	return &PostServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *PostServiceServer) PostCreate(ctx context.Context, in *__.PostCreateReq) (*__.PostCreateResp, error) {
	l := logic.NewPostCreateLogic(ctx, s.svcCtx)
	return l.PostCreate(in)
}

func (s *PostServiceServer) PostDelete(ctx context.Context, in *__.PostDeleteReq) (*__.PostDeleteResp, error) {
	l := logic.NewPostDeleteLogic(ctx, s.svcCtx)
	return l.PostDelete(in)
}

func (s *PostServiceServer) PostUpdate(ctx context.Context, in *__.PostUpdateReq) (*__.PostUpdateResp, error) {
	l := logic.NewPostUpdateLogic(ctx, s.svcCtx)
	return l.PostUpdate(in)
}

func (s *PostServiceServer) PostDetail(ctx context.Context, in *__.PostDetailReq) (*__.PostDetailResp, error) {
	l := logic.NewPostDetailLogic(ctx, s.svcCtx)
	return l.PostDetail(in)
}

func (s *PostServiceServer) PostList(ctx context.Context, in *__.PostListReq) (*__.PostListResp, error) {
	l := logic.NewPostListLogic(ctx, s.svcCtx)
	return l.PostList(in)
}
