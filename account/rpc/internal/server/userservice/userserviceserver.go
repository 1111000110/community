// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: account.proto

package server

import (
	"context"

	"community.com/account/rpc/internal/logic/userservice"
	"community.com/account/rpc/internal/svc"
	"community.com/account/rpc/pb"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	__.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServiceServer) UserLogin(ctx context.Context, in *__.UserLoginReq) (*__.UserLoginResp, error) {
	l := userservicelogic.NewUserLoginLogic(ctx, s.svcCtx)
	return l.UserLogin(in)
}

func (s *UserServiceServer) UserRegister(ctx context.Context, in *__.UserRegisterReq) (*__.UserRegisterResp, error) {
	l := userservicelogic.NewUserRegisterLogic(ctx, s.svcCtx)
	return l.UserRegister(in)
}

func (s *UserServiceServer) UserDelete(ctx context.Context, in *__.UserDeleteReq) (*__.UserDeleteResp, error) {
	l := userservicelogic.NewUserDeleteLogic(ctx, s.svcCtx)
	return l.UserDelete(in)
}

func (s *UserServiceServer) UserUpdate(ctx context.Context, in *__.UserUpdateReq) (*__.UserUpdateResp, error) {
	l := userservicelogic.NewUserUpdateLogic(ctx, s.svcCtx)
	return l.UserUpdate(in)
}

func (s *UserServiceServer) UserQuery(ctx context.Context, in *__.UserQueryReq) (*__.UserQueryResp, error) {
	l := userservicelogic.NewUserQueryLogic(ctx, s.svcCtx)
	return l.UserQuery(in)
}
